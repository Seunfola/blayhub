generator client {
  provider = "prisma-client-js"
  seed = "prisma/seed.js"
}

datasource db {
  provider = "cockroachdb"
  relationMode = "prisma"
  url = env("DATABASE_URL")
}

model User {
  id                Int                @id @default(sequence())
  email             String             @unique
  name              String
  age               Int
  password          String
  country           String
  state             String
  city              String
  language          String
  specialization    String
  ndaChecked        Boolean
  role              String  
  about             String?
  company           String?
  address           String?
  skills            String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  resetToken        String?
  resetTokenExpiry  DateTime?
  jobApplications   JobApplication[]   @relation("UserJobApplications")
  experiences       Experience[]       @relation("UserExperiences")
  employerProfile   Employer?          @relation("UserEmployerProfile")
}

model Employer {
  id          Int     @id @default(sequence())
  userId      Int     @unique
  company     String
  website     String?
  jobs        Job[]   @relation("EmployerJobs")

  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserEmployerProfile")

  @@index([userId], name: "UserEmployerProfile_userId_idx")
}

model Experience {
  id          Int      @id @default(sequence())
  userId      Int
  title       String
  company     String
  startDate   DateTime
  endDate     DateTime?
  description String?
  location    String?
  workMode    String?

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserExperiences")

  @@index([userId], name: "UserExperiences_userId_idx")
}

model JobApplication {
  id          Int    @id @default(sequence())
  name        String
  email       String
  phone       String
  address     String?
  linkedin    String?
  github      String?
  coverLetter String?
  resumeUrl   String?
  jobId       Int
  userId      Int

  user        User @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserJobApplications")
  job         Job  @relation(fields: [jobId], references: [id], onDelete: Cascade, name: "JobApplications")

  @@index([userId], name: "UserJobApplications_userId_idx")
  @@index([jobId], name: "JobApplications_jobId_idx")
}

model Job {
  id                  Int              @id @default(sequence())
  title               String
  description         String
  criteria            String
  skills              String
  yearsOfExperience   String
  level               String
  jobResponsibilities String
  country             String
  salary              Int
  company             String
  workmode            String
  category            String
  jobType             String
  industry            String
  employerId          Int
  applications        JobApplication[] @relation("JobApplications")

  employer            Employer         @relation(fields: [employerId], references: [id], onDelete: Cascade, name: "EmployerJobs")

  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt

  @@index([category])
  @@index([title, description])
}
